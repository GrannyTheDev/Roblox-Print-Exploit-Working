#include <cstdint>
#include <Windows.h>
#include <string>
#define ASLR(x)(x - 0x400000 + (DWORD)GetModuleHandleA(0))

using namespace std;

using print_typedef = int(__cdecl*)(int A, int B, ...);
print_typedef print = (print_typedef)(ASLR(0x7A8330));

DWORD __stdcall input()
{
    print(0, (int)" ██████╗ ██████╗  █████╗ ███╗   ██╗███╗   ██╗██╗   ██╗");
    print(0, (int)"██╔════╝ ██╔══██╗██╔══██╗████╗  ██║████╗  ██║╚██╗ ██╔╝");
    print(0, (int)"██║  ███╗██████╔╝███████║██╔██╗ ██║██╔██╗ ██║ ╚████╔╝");
    print(0, (int)"██║   ██║██╔══██╗██╔══██║██║╚██╗██║██║╚██╗██║  ╚██╔╝");
    print(0, (int)"╚██████╔╝██║  ██║██║  ██║██║ ╚████║██║ ╚████║   ██║");
    print(0, (int)" ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═══╝╚═╝  ╚═══╝   ╚═╝");
    print(0, (int)"hi");
    print(0, (int)"Thank You for using my print exploit made by GrannyTheDev#0900");
    DWORD asdmemes;
    VirtualProtect((PVOID)&FreeConsole, 1, PAGE_EXECUTE_READWRITE, &asdmemes);
    return 0;
}


BOOL APIENTRY DllMain(HMODULE hModule, DWORD ul_reason_for_call, LPVOID lpReserved)
{
    switch (ul_reason_for_call)
    {
    case DLL_PROCESS_ATTACH:
        CreateThread(0x0, 0x0, (LPTHREAD_START_ROUTINE)input, 0x0, 0x0, 0x0);
    case DLL_THREAD_ATTACH:
    case DLL_THREAD_DETACH:
    case DLL_PROCESS_DETACH:
        break;
    }
    return TRUE;
}
